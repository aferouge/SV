
sort

  Sign = struct P1 | P2 | P3 | P4 | S1 | S2 | S3 | S4 ;
  Barrier = struct B1 | B2 | B3 | B4 ;
  Lock = struct L1 | L2 ;

  sSign = struct on | off ; 
  sBarrier = struct up | down ;
  sLock = struct locked | unlocked ;
  sDeck = struct up | down ;

  Motor = struct movingUp | movingDown | stopped | broken ;
 
  

act
  
  setSign, getSign: Sign;
  setBarrier, getBarrier: Barrier;
  setLock, getLock: Lock;
  Open, Close, setDeck, getDeck, motorStatus;

map
%functions
  


eqn
%rules


  
proc 
  Signs = 
    something. Signs;

  Barriers = 
    something. Barriers;
	
  Bridge = 
    something. Bridge;
    
    
init
  allow(
    { Open, Close },
    comm(
      {  },
      Signs || Barriers ||  Bridge
));