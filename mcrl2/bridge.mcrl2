% All possible states for the bridge components
sort
  st_sign    = struct on | off;             %sign status
  st_deck    = struct up | down;            %deck status
  st_barrier = struct lift | lower;         %barrier status
  st_lock    = struct engaged | disengaged; %lock status
  st_bridge  = struct open | close;

act
  sendPre, receivePre, commPre: st_sign;
  rSwitchOffPre, sSwitchOffPre, cSwitchOffPre;
  rSwitchOnPre, sSwitchOnPre, cSwitchOnPre;
  setPreSign: st_sign;

proc
  PreSign(status: st_sign)
    = (status == on) -> rSwitchOffPre . PreSign(status = off)
    + (status == off) -> rSwitchOnPre . PreSign(status = on)
    + sendPre(status) . PreSign();

act
  sendStop, receiveStop, commStop: st_sign;
  rSwitchOffStop, sSwitchOffStop, cSwitchOffStop;
  rSwitchOnStop, sSwitchOnStop, cSwitchOnStop;
  setStopSign: st_sign;

proc
  StopSign(status: st_sign)
    = (status == on) -> rSwitchOffStop . StopSign(status = off)
    + (status == off) -> rSwitchOnStop . StopSign(status = on)
    + sendStop(status) . StopSign();

act
  sendFrontBarrier, receiveFrontBarrier, commFrontBarrier: st_barrier;
  rLiftFrontBarrier, sLiftFrontBarrier, cLiftFrontBarrier;
  rLowerFrontBarrier, sLowerFrontBarrier, cLowerFrontBarrier;
  setFrontBarrier: st_barrier;

proc
  FrontBarrier(status: st_barrier)
    = (status == lower) -> rLiftFrontBarrier . FrontBarrier(status = lift)
    + (status == lift) -> rLowerFrontBarrier . FrontBarrier(status = lower)
    + sendFrontBarrier(status) . FrontBarrier();

act
  sendBackBarrier, receiveBackBarrier, commBackBarrier: st_barrier;
  rLiftBackBarrier, sLiftBackBarrier, cLiftBackBarrier;
  rLowerBackBarrier, sLowerBackBarrier, cLowerBackBarrier;
  setBackBarrier: st_barrier;

proc
  BackBarrier(status: st_barrier)
    = (status == lower) -> rLiftBackBarrier . BackBarrier(status = lift)
    + (status == lift) -> rLowerBackBarrier . BackBarrier(status = lower)
    + sendBackBarrier(status) . BackBarrier();

act
  sendLock, receiveLock, commLock: st_lock;
  rEngage, sEngage, cEngage;
  rDisengage, sDisengage, cDisengage;
  setLock: st_lock;

proc
  Lock(status: st_lock)
    = (status == engaged) -> rDisengage . Lock(status = disengaged)
    + (status == disengaged) -> rEngage . Lock(status = engaged)
    + sendLock(status) . Lock();

act
  sendDeck, receiveDeck, commDeck: st_deck;
  sLiftDeck, rLiftDeck, cLiftDeck;
  sLowerDeck, rLowerDeck, cLowerDeck;
  setDeck: st_deck;

proc
  Deck(status: st_deck)
    = (status == up) -> rLowerDeck . Deck(status = down)
    + (status == down) -> rLiftDeck . Deck(status = up)
    + sendDeck(status) . Deck();

proc
  SafetyLayer
    = setPreSign(on) . (receivePre(on) + receivePre(off) . sSwitchOnPre) . SafetyLayer()
    + setPreSign(off) . (receivePre(off) + receivePre(on) . (receiveStop(off) . sSwitchOffPre + receiveStop(on))) . SafetyLayer()

    + setStopSign(on) . (receiveStop(on) + receiveStop(off) . (receivePre(on) . sSwitchOnStop + receivePre(off))) . SafetyLayer()
    + setStopSign(off) . (receiveStop(off) + receiveStop(on) . (receiveFrontBarrier(lift) . sSwitchOffStop + receiveFrontBarrier(lower))) . SafetyLayer()

    + setFrontBarrier(lower) . (receiveFrontBarrier(lower) + receiveFrontBarrier(lift) . (receiveStop(on) . sLowerFrontBarrier + receiveStop(off))) . SafetyLayer()
    + setFrontBarrier(lift) . (receiveFrontBarrier(lift) + receiveFrontBarrier(lower) . (receiveBackBarrier(lift) . sLiftFrontBarrier + receiveBackBarrier(lower))) . SafetyLayer()

    + setBackBarrier(lower) . (receiveBackBarrier(lower) + receiveBackBarrier(lift) . (receiveFrontBarrier(lower) . sLowerBackBarrier + receiveFrontBarrier(lift))) . SafetyLayer()
    + setBackBarrier(lift) . (receiveBackBarrier(lift) + receiveBackBarrier(lower) . (receiveLock(engaged) . sLiftBackBarrier + receiveLock(disengaged))) . SafetyLayer()

    + setLock(engaged) . (receiveLock(engaged) + receiveLock(disengaged) . (receiveDeck(down) . sEngage + receiveDeck(up))) . SafetyLayer()
    + setLock(disengaged) . (receiveLock(disengaged) + receiveLock(engaged) . (receiveBackBarrier(lower) . sDisengage + receiveBackBarrier(lift))) . SafetyLayer()

    + setDeck(up) . (receiveDeck(up) + receiveDeck(down) . (receiveLock(disengaged) . sLiftDeck + receiveLock(engaged))) . SafetyLayer()
    + setDeck(down) . (receiveDeck(down) + receiveDeck(up) . (receiveLock(disengaged) . sLowerDeck + receiveLock(engaged))) . SafetyLayer();

init
  allow({
    setPreSign,
    commPre,
    cSwitchOffPre,
    cSwitchOnPre,

    setStopSign,
    commStop,
    cSwitchOffStop,
    cSwitchOnStop,

    setFrontBarrier,
    commFrontBarrier,
    cLowerFrontBarrier,
    cLiftFrontBarrier,

    setBackBarrier,
    commBackBarrier,
    cLowerBackBarrier,
    cLiftBackBarrier,

    setLock,
    commLock,
    cEngage,
    cDisengage,

    setDeck,
    commDeck,
    cLowerDeck,
    cLiftDeck
  },
  comm({
    receivePre|sendPre -> commPre,
    rSwitchOffPre|sSwitchOffPre -> cSwitchOffPre,
    rSwitchOnPre|sSwitchOnPre -> cSwitchOnPre,

    receiveStop|sendStop -> commStop,
    rSwitchOffStop|sSwitchOffStop -> cSwitchOffStop,
    rSwitchOnStop|sSwitchOnStop -> cSwitchOnStop,

    receiveFrontBarrier|sendFrontBarrier -> commFrontBarrier,
    rLowerFrontBarrier|sLowerFrontBarrier -> cLowerFrontBarrier,
    rLiftFrontBarrier|sLiftFrontBarrier -> cLiftFrontBarrier,

    receiveBackBarrier|sendBackBarrier -> commBackBarrier,
    rLowerBackBarrier|sLowerBackBarrier -> cLowerBackBarrier,
    rLiftBackBarrier|sLiftBackBarrier -> cLiftBackBarrier,

    receiveLock|sendLock -> commLock,
    rEngage|sEngage -> cEngage,
    rDisengage|sDisengage -> cDisengage,

    rLowerDeck|sLowerDeck -> cLowerDeck,
    rLiftDeck|sLiftDeck -> cLiftDeck,
    receiveDeck|sendDeck -> commDeck
  },
       PreSign(off)
    || StopSign(off)
    || FrontBarrier(lift)
    || BackBarrier(lift)
    || Lock(engaged)
    || Deck(down)
    || SafetyLayer
  ));
