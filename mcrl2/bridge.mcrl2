% All possible states for the bridge components
sort
  st_sign    = struct on | off;             %sign status
  st_deck    = struct up | down;            %deck status
  st_barrier = struct lift | lower;         %barrier status
  st_lock    = struct engaged | disengaged; %lock status
  st_motor   = struct broken | operational; %motor status

  id_pre     = struct P1 | P2 | P3 | P4;
  id_stop    = struct S1 | S2 | S3 | S4;
  id_barrier = struct B1 | B2;
  id_lock    = struct L1 | L2;

% Interactions between the pre signs and the safety layer
act
  sendPre, receivePre, commPre: id_pre # st_sign;
  rSwitchPre, sSwitchPre, cSwitchPre: id_pre # st_sign;
  setPreSign: st_sign;

proc
  PreSign(id: id_pre, status: st_sign)
    = (status == on) -> rSwitchPre(id, off) . PreSign(status = off)
    + (status == off) -> rSwitchPre(id, on) . PreSign(status = on)
    + sendPre(id, status) . PreSign();

% Interactions between the stop signs and the safety layer
act
  sendStop, receiveStop, commStop: id_stop # st_sign;
  rSwitchStop, sSwitchStop, cSwitchStop: id_stop # st_sign;
  setStopSign: st_sign;

proc
  StopSign(id: id_stop, status: st_sign)
    = (status == on) -> rSwitchStop(id, off) . StopSign(status = off)
    + (status == off) -> rSwitchStop(id, on) . StopSign(status = on)
    + sendStop(id, status) . StopSign();

% Interactions between the front barriers and the safety layer
act
  sendFrontBarrier, receiveFrontBarrier, commFrontBarrier: id_barrier # st_barrier;
  rFrontBarrier, sFrontBarrier, cFrontBarrier: id_barrier # st_barrier;
  setFrontBarrier: st_barrier;

proc
  FrontBarrier(id: id_barrier, status: st_barrier)
    = (status == lower) -> rFrontBarrier(id, lift) . FrontBarrier(status = lift)
    + (status == lift) -> rFrontBarrier(id, lower) . FrontBarrier(status = lower)
    + sendFrontBarrier(id, status) . FrontBarrier();

% Interactions between the back barriers and the safety layer
act
  sendBackBarrier, receiveBackBarrier, commBackBarrier: id_barrier # st_barrier;
  rBackBarrier, sBackBarrier, cBackBarrier: id_barrier # st_barrier;
  setBackBarrier: st_barrier;

proc
  BackBarrier(id: id_barrier, status: st_barrier)
    = (status == lower) -> rBackBarrier(id, lift) . BackBarrier(status = lift)
    + (status == lift) -> rBackBarrier(id, lower) . BackBarrier(status = lower)
    + sendBackBarrier(id, status) . BackBarrier();

% Interactions between the locks and the safety layer
act
  setLock: st_lock;
  sendLock, receiveLock, commLock: id_lock # st_lock;
  rLock, sLock, cLock: id_lock # st_lock;

proc
  Lock(id: id_lock, status: st_lock)
    = (status == engaged) -> rLock(id, disengaged) . Lock(status = disengaged)
    + (status == disengaged) -> rLock(id, engaged) . Lock(status = engaged)
    + sendLock(id, status) . Lock();

% Interactions between the deck and the safety layer
act
  sendDeck, receiveDeck, commDeck: st_deck;
  sDeck, rDeck, cDeck: st_deck;
  setDeck: st_deck;

proc
  Deck(status: st_deck)
    = (status == up) -> rDeck(down) . Deck(status = down)
    + (status == down) -> rDeck(up) . Deck(status = up)
    + sendDeck(status) . Deck();

% Interactions between the motor and the safety layer
act
  sendMotor, receiveMotor, commMotor: st_motor;

proc
  Motor(status: st_motor)
    = sendMotor(status) . Motor();

% Safety layer checking all possible input actions for safety. If unsafe, the transition ends up as a self-loop. If safe, a transition to another node is taken.
proc
  SafetyLayer
    =

    % Checking safety for switching on the pre signs
    setPreSign(on)
      . (
        receivePre(P1, on)
        + receivePre(P1, off) . sSwitchPre(P1, on)
      ) . (
        receivePre(P2, on)
        + receivePre(P2, off) . sSwitchPre(P2, on)
      ) . (
        receivePre(P3, on)
        + receivePre(P3, off) . sSwitchPre(P3, on)
      ) . (
        receivePre(P4, on)
        + receivePre(P4, off) . sSwitchPre(P4, on)
      )
      . SafetyLayer()

    % Checking safety for switching off the pre signs
    + setPreSign(off)
      . (
        receiveStop(S1, on)
        + receiveStop(S1, off)
          . (
            receiveStop(S2, on)
            + receiveStop(S2, off)
              . (
                receiveStop(S3, on)
                + receiveStop(S3, off)
                  . (
                    receiveStop(S4, on)
                    + receiveStop(S4, off)
                      . (
                        receivePre(P1, off)
                        + receivePre(P1, on) . sSwitchPre(P1, off)
                      ) . (
                        receivePre(P2, off)
                        + receivePre(P2, on) . sSwitchPre(P2, off)
                      ) . (
                        receivePre(P3, off)
                        + receivePre(P3, on) . sSwitchPre(P3, off)
                      ) . (
                        receivePre(P4, off)
                        + receivePre(P4, on) . sSwitchPre(P4, off)
                      )
                  )
              )
          )
      )
      . SafetyLayer()

    % Checking safety for switching on the stop signs
    + setStopSign(on)
      . (
        receivePre(P1, off)
        + receivePre(P1, on)
          . (
            receivePre(P2, off)
            + receivePre(P2, on)
              . (
                receivePre(P3, off)
                + receivePre(P3, on)
                  . (
                    receivePre(P4, off)
                    + receivePre(P4, on)
                      . (
                        receiveStop(S1, on)
                        + receiveStop(S1, off) . sSwitchStop(S1, on)
                      ) . (
                        receiveStop(S2, on)
                        + receiveStop(S2, off) . sSwitchStop(S2, on)
                      ) . (
                        receiveStop(S3, on)
                        + receiveStop(S3, off) . sSwitchStop(S3, on)
                      ) . (
                        receiveStop(S4, on)
                        + receiveStop(S4, off) . sSwitchStop(S4, on)
                      )
                  )
              )
          )
      )
      . SafetyLayer()

    % Checking safety for switching off the stop signs
    + setStopSign(off)
      . (
        receiveFrontBarrier(B1, lower)
        + receiveFrontBarrier(B1, lift)
          . (
            receiveFrontBarrier(B2, lower)
            + receiveFrontBarrier(B2, lift)
              . (
                receiveStop(S1, off)
                + receiveStop(S1, on) . sSwitchStop(S1, off)
               ) . (
                 receiveStop(S2, off)
                 + receiveStop(S2, on) . sSwitchStop(S2, off)
               ) . (
                 receiveStop(S3, off)
                 + receiveStop(S3, on) . sSwitchStop(S3, off)
               ) . (
                 receiveStop(S4, off)
                 + receiveStop(S4, on) . sSwitchStop(S4, off)
               )
          )
      )
      . SafetyLayer()

    % Checking safety for lowering the front barriers
    + setFrontBarrier(lower)
      . (
        receiveStop(S1, off)
        + receiveStop(S1, on)
          . (
            receiveStop(S2, off)
            + receiveStop(S2, on)
              . (
                receiveStop(S3, off)
                + receiveStop(S3, on)
                  . (
                    receiveStop(S4, off)
                    + receiveStop(S4, on)
                      . (
                        receiveFrontBarrier(B1, lower)
                        + receiveFrontBarrier(B1, lift) . sFrontBarrier(B1, lower)
                      ) . (
                        receiveFrontBarrier(B2, lower)
                        + receiveFrontBarrier(B2, lift) . sFrontBarrier(B2, lower)
                      )
                  )
              )
          )
      )
      . SafetyLayer()

    % Checking safety for lifting on the front barriers
    + setFrontBarrier(lift)
      . (
        receiveBackBarrier(B1, lower)
        + receiveBackBarrier(B1, lift)
          . (
            receiveBackBarrier(B2, lower)
            + receiveBackBarrier(B2, lift)
              . (
                receiveFrontBarrier(B1, lift)
                + receiveFrontBarrier(B1, lower) . sFrontBarrier(B1, lift)
              ) . (
                receiveFrontBarrier(B2, lift)
                + receiveFrontBarrier(B2, lower) . sFrontBarrier(B2, lift)
              )
          )
      )
      . SafetyLayer()

    % Checking safety for lowering the back barriers
    + setBackBarrier(lower)
      . (
         receiveFrontBarrier(B1, lift)
         + receiveFrontBarrier(B1, lower)
           . (
             receiveFrontBarrier(B2, lift)
             + receiveFrontBarrier(B2, lower)
               . (
                 receiveBackBarrier(B1, lower)
                 + receiveBackBarrier(B1, lift) . sBackBarrier(B1, lower)
               ) . (
                 receiveBackBarrier(B2, lower)
                 + receiveBackBarrier(B2, lift) . sBackBarrier(B2, lower)
               )
           )
      )
      . SafetyLayer()

    % Checking safety for lifting the back barriers
    + setBackBarrier(lift)
      . (
        receiveLock(L1, disengaged)
        + receiveLock(L1, engaged)
          . (
            receiveLock(L2, disengaged)
            + receiveLock(L2, engaged)
              . (
                receiveBackBarrier(B1, lift)
                + receiveBackBarrier(B1, lower) . sBackBarrier(B1, lift)
              ) . (
                receiveBackBarrier(B2, lift)
                + receiveBackBarrier(B2, lower) . sBackBarrier(B2, lift)
              )
          )
      )
      . SafetyLayer()

    % Checking safety for engaging the locks
    + setLock(engaged)
      . (
        receiveDeck(up)
        + receiveDeck(down)
          . (
            receiveLock(L1, engaged)
            + receiveLock(L1, disengaged) . sLock(L1, engaged)
          ) . (
            receiveLock(L2, engaged)
            + receiveLock(L2, disengaged) . sLock(L2, engaged)
          )
      )
      . SafetyLayer()

    % Checking safety for disengaging the locks
    + setLock(disengaged)
      . (
        receiveBackBarrier(B1, lift)
        + receiveBackBarrier(B1, lower)
          . (
            receiveLock(L1, disengaged)
            + receiveLock(L1, engaged) . sLock(L1, disengaged)
          ) . (
            receiveLock(L2, disengaged)
            + receiveLock(L2, engaged) . sLock(L2, disengaged)
          )
      )
      . SafetyLayer()

    % Checking safety for lifting the deck
    + setDeck(up)
      . (
        receiveDeck(up)
        + receiveDeck(down)
          . (
            receiveMotor(broken)
            + receiveMotor(operational)
              . (
                receiveLock(L1, engaged)
                + receiveLock(L1, disengaged)
                  . (
                    receiveLock(L2, engaged)
                    + receiveLock(L2, disengaged) . sDeck(up)
                  )
               )
            )
         )
      . SafetyLayer()

    % Checking safety for lowering the deck
    + setDeck(down)
      . (
        receiveDeck(down)
        + receiveDeck(up)
          . (
            receiveMotor(broken)
            + receiveMotor(operational)
              . (
                receiveLock(L1, engaged)
                + receiveLock(L1, disengaged)
                  . (
                    receiveLock(L2, engaged)
                    + receiveLock(L2, disengaged) . sDeck(down)
                    )
                )
            )
        )
      . SafetyLayer();

init
  allow({

    % all external actions to be performed by the bridge operator
    setPreSign,
    commPre,
    cSwitchPre,

    setStopSign,
    commStop,
    cSwitchStop,

    setFrontBarrier,
    commFrontBarrier,
    cFrontBarrier,

    setBackBarrier,
    commBackBarrier,
    cBackBarrier,

    setLock,
    commLock,
    cLock,

    setDeck,
    commDeck,
    cDeck,

    commMotor
  },
  comm({

    % Synchronizing the multi-actions
    receivePre|sendPre -> commPre,
    rSwitchPre|sSwitchPre -> cSwitchPre,

    receiveStop|sendStop -> commStop,
    rSwitchStop|sSwitchStop -> cSwitchStop,

    receiveFrontBarrier|sendFrontBarrier -> commFrontBarrier,
    rFrontBarrier|sFrontBarrier -> cFrontBarrier,

    receiveBackBarrier|sendBackBarrier -> commBackBarrier,
    rBackBarrier|sBackBarrier -> cBackBarrier,

    receiveLock|sendLock -> commLock,
    rLock|sLock -> cLock,

    receiveDeck|sendDeck -> commDeck,
    rDeck|sDeck -> cDeck,

    receiveMotor|sendMotor -> commMotor
  },

    % Initial state
       PreSign(P1, off)
    || PreSign(P2, off)
    || PreSign(P3, off)
    || PreSign(P4, off)

    || StopSign(S1, off)
    || StopSign(S2, off)
    || StopSign(S3, off)
    || StopSign(S4, off)

    || FrontBarrier(B1, lift)
    || FrontBarrier(B2, lift)
    || BackBarrier(B1, lift)
    || BackBarrier(B2, lift)

    || Lock(L1, engaged)
    || Lock(L2, engaged)

    || Deck(down)

    || Motor(operational)
    || SafetyLayer
  ));
